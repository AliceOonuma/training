<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jp.genuine.training.carmanager.datasource.sampledb.car.CarMapper">

	<resultMap type="jp.genuine.training.carmanager.model.car.Car" id="carDetail">
		<id column="car_id" property="carId.value"/>
		<result column="car_name" property="carName.value"/>
		<result column="gasolinetank_capacity" property="gasolineTankCapacity.value"/>
		<result column="gasoline_name" property="gasolineType.value"/>
		<result column="memo" property="memo.value"/>
	</resultMap>

	<select id="findBy" resultMap="carDetail" flushCache="true">

	SELECT
		car.car_id,
		car.car_name,
		car.gasolinetank_capacity,
		gasoline_type.gasoline_name,
		car.memo
	FROM
		car.car
	INNER JOIN
		car.gasoline_type
	ON
		gasoline_type.gasoline_type = car.gasoline_type
	WHERE
		car.car_id = #{carId.value};

	</select>

	<resultMap type="jp.genuine.training.carmanager.model.car.CarId" id="nextCarId">
		<id column="nextval" property="value" />
	</resultMap>

	<select id="nextId" resultMap="nextCarId" flushCache="true">

	SELECT nextval('car.car_id')

	</select>

	<insert id="register" parameterType="jp.genuine.training.carmanager.model.car.CarRegister">

	INSERT INTO
		car.car( car_id ,
			user_id ,
			car_name ,
			gasoline_type ,
			gasolinetank_capacity ,
			memo )
	VALUES
		( #{carRegister.carId.value} ,
		#{user.userId.value},
		#{carRegister.carName.value} ,
		#{carRegister.gasolineType.value} ,
		#{carRegister.gasolineTankCapacity.intValue} ,
		#{carRegister.memo.value} )

	</insert>

	<insert id="registerInitialStatus" parameterType="jp.genuine.training.carmanager.model.car.CarRegister">

	INSERT INTO
		car.initial_car_status
			( car_id,
			odometer ,
			gasoline_quantity )
	VALUES
		 ( #{carRegister.carId.value} ,
		#{carRegister.initialOdometer.intValue} ,
		#{carRegister.gasolineQuantity.intValue} )


	</insert>

	<update id="modify">

	UPDATE
		car.car
	SET
		car_id = #{carRegister.carId.value} ,
		user_id = #{user.userId.value},
		car_name = #{carRegister.carName.value} ,
		gasolinetank_capacity = #{carRegister.gasolineTankCapacity.intValue} ,
		gasoline_type = #{carRegister.gasolineType.value} ,
		memo = #{carRegister.memo.value}
	WHERE
		car_id = #{carRegister.carId.value}


	</update>

	<update id="modifyInitialStatus">

	UPDATE
		car.initial_car_status
	SET
		car_id = #{carRegister.carId.value},
		odometer = #{carRegister.initialOdometer.intValue},
		gasoline_quantity = #{carRegister.gasolineQuantity.intValue}
	WHERE
		car_id = #{carRegister.carId.value}

	</update>

	<resultMap type="jp.genuine.training.carmanager.model.car.CarRegister" id="carModify">
		<id column="car_id" property="carId.value" />
		<result column="car_name" property="carName.value"/>
		<result column="gasolinetank_capacity" property="gasolineTankCapacity.value"/>
		<result column="gasoline_quantity" property="gasolineQuantity.value"/>
		<result column="odometer" property="initialOdometer.value"/>
		<result column="gasoline_type" property="gasolineType.value"/>
		<result column="memo" property="memo.value"/>
	</resultMap>

	<select id="findByDetail" resultMap="carModify" flushCache="true">

	SELECT
		car.car_id,
		car.car_name,
		car.gasolinetank_capacity,
		initial_car_status.gasoline_quantity,
		initial_car_status.odometer,
		car.gasoline_type,
		car.memo
	FROM
		car.car
	INNER JOIN
		car.initial_car_status
	ON
		car.car_id = initial_car_status.car_id
	WHERE
		car.car_id = #{carId.value};

	</select>

	<resultMap type="jp.genuine.training.carmanager.model.car.GasolineType" id="gasolineType">
		<id column="gasoline_type" property="value" />
		<result column="gasoline_name" property="name" />
	</resultMap>

	<select id="type" resultMap="gasolineType" flushCache="true">

	SELECT
		gasoline_type.gasoline_type,
		gasoline_type.gasoline_name
	FROM
		car.gasoline_type;

	</select>


</mapper>
